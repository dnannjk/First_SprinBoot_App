name: Build and Push Docker Springboot Image

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_and_push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build the Maven project
        run: mvn package

      - name: Set IMAGE_TAG
        id: set_image_tag
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 767398147229.dkr.ecr.us-east-1.amazonaws.com

      - name: Verify Docker login
        run: docker info

      - name: Build Docker image
        run: sudo docker build -t gitworkflowrepo:${{ env.IMAGE_TAG }} .

      - name: Tag Docker image
        run: sudo docker tag gitworkflowrepo:${{ env.IMAGE_TAG }} 767398147229.dkr.ecr.us-east-1.amazonaws.com/gitworkflowrepo:${{ env.IMAGE_TAG }}

      - name: Push Docker image to Amazon ECR
        run: sudo docker push 767398147229.dkr.ecr.us-east-1.amazonaws.com/gitworkflowrepo:${{ env.IMAGE_TAG }}


        
  deploy:
    runs-on: self-hosted
    needs: build_and_push  
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  #     # - name: Set up AWS credentials
  #     #   uses: aws-actions/configure-aws-credentials@v3
  #     #   with:
  #     #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     #     aws-region: us-east-1

  #     # - name: Install kubectl
  #     # - name: Install Argo CD CLI
  #     # - name: Install eksctl
  #     # - name: Set up AWS credentials
  #     # - name: Create Amazon EKS cluster
  #     # - name: Wait for EKS Cluster
  #     # - name: Configure kubectl

      # - name: Deploy application
      #   run: |
      #     kubectl apply -f k8s.yaml
  #     #     kubectl apply -f argocd-app.yaml

  #     # - name: Deploy application with Argo CD
  #     #   run: |
  #     #     kubectl apply -f k8s.yaml --validate=false

  #     # - name: Configure kubectl for Amazon EKS cluster
  #     #   run: aws eks --region us-east-1 update-kubeconfig --name springboot-github-workflow-cluster

      - name: Deploy pod
        env:
          IMAGE_TAG: ${{ needs.build_and_push.outputs.IMAGE_TAG }}
        run: |
          sed -i "s|767398147229.dkr.ecr.us-east-1.amazonaws.com/gitworkflowrepo:latest|767398147229.dkr.ecr.us-east-1.amazonaws.com/gitworkflowrepo:${IMAGE_TAG}|" k8s.yaml
          kubectl apply -f k8s.yaml